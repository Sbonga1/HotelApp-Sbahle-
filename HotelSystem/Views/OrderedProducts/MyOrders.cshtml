@model IEnumerable<IGrouping<Tuple<DateTime, TimeSpan>, HotelSystem.Models.OrderedProduct>>
@using HotelSystem.Models
@{
    ApplicationDbContext db = new ApplicationDbContext();
    ViewBag.Title = "MyOrders";
}

<section class="w3l-index-about py-5" id="about2">
    <div class="container py-md-5 py-2">
        <h2 class="text-center fw-bold mb-5"><i class="fa fa-shopping-cart"></i> My Orders</h2>

        @foreach (var group in Model)
        {
            var order = group.FirstOrDefault()?.CustomerOrder;
            var orderId = group.FirstOrDefault()?.CustomerOrderId;

            <div class="card shadow-sm mb-5 border-0 rounded-4">
                <div class="card-header bg-dark text-white d-flex justify-content-between align-items-center">
                    <span><strong>Date:</strong> @group.Key.Item1.ToLongDateString()</span>
                    <span><strong>Time:</strong> @group.Key.Item2.ToString(@"hh\:mm")</span>
                </div>

                <div class="card-body">
                    @foreach (var item in group)
                    {
                        var itemTotal = item.Product.Price * item.Quantity;

                        <div class="row align-items-center mb-3 border-bottom pb-2">
                            <div class="col-md-1">
                                <a href="#" onclick="showBiggerImage('@item.Product.picture')">
                                    <img src="~/assets/images/@item.Product.picture" class="img-thumbnail" width="60" height="60" />
                                </a>
                            </div>
                            <div class="col-md-3">
                                <strong>@item.Product.Name</strong>
                            </div>
                            <div class="col-md-2">
                                Quantity: <span class="text-primary">@item.Quantity</span>
                            </div>
                            <div class="col-md-2">
                                Unit Price: <span class="text-primary">R @item.Product.Price.ToString("F2")</span>
                            </div>
                            <div class="col-md-2">
                                Subtotal: <span class="text-success">R @itemTotal.ToString("F2")</span>
                            </div>
                        </div>
                    }

                    @* Show preferred time if RoomService *@
                    @if (order?.DeliveryType == "RoomService" && order.PreferredTime != null)
                    {
                        <div class="mt-3">
                            <strong>Preferred Delivery Time:</strong>
                            <span class="text-info ms-2">@(order.PreferredTime)</span>
                        </div>
                    }

                    @* Show table number if EatIn and table assigned *@
                    @if (order?.DeliveryType == "EatIn" && order.TableNumber != null)
                    {
                        <div class="mt-3">
                            <strong>Assigned Table Number:</strong>
                            <span class="text-info ms-2">Table @order.TableNumber</span>
                        </div>
                    }
                </div>

                <div class="card-footer bg-light d-flex flex-wrap justify-content-between align-items-center">
                    <div>
                        <strong>Delivery Option:</strong>
                        <span class="text-primary ms-1">@(order?.DeliveryType)</span>
                    </div>

                    <div>
                        <strong>Basic Cost:</strong>
                        <span class="text-primary ms-1">R @(order?.Amount.ToString("F2") ?? "0.00")</span>
                    </div>

                    <div>
                        <strong>Total Cost:</strong>
                        <span class="text-success ms-1">R @(order?.Amount.ToString("F2") ?? "0.00")</span>
                    </div>

                    <div class="mt-2 mt-md-0">
                        <a class="btn btn-outline-primary me-2" href="@Url.Action("TrackOrder", "OrderedProducts", new { id = orderId })">
                            <i class="fa fa-map-marker"></i> Track Order
                        </a>

                        @if (order?.Status == "Placed")
                        {
                            <a class="btn btn-outline-danger me-2" href="@Url.Action("Cancel", "OrderedProducts", new { id = orderId })">
                                <i class="fa fa-times-circle"></i> Cancel
                            </a>
                        }
                        else if (order?.Status == "Order Recived")
                        {
                            var compain = db.Complaints.Where(x => x.CustomerOrderId == orderId).FirstOrDefault();
                            if (compain == null)
                            {
                                <a class="btn btn-outline-danger btn-sm"
                                   href="@Url.Action("Submit", "Complaint", new { orderId = orderId })">
                                    <i class="fa fa-exclamation-circle"></i> Complain
                                </a>
                                }


                        }
                    </div>
                </div>
            </div>
        }
    </div>
</section>
